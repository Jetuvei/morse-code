# -*- coding: cp1252 -*-
## =================
## MorseCode.py
## =================
## 2012.09.07
## Justin Whitehouse
##

# -*- coding: cp1252 -*-

## *****************
## Morse Code = INTERNATIONAL Morse Code
## *****************

## -----------------
##
##  Program to convert text into morse code.
##  e.g. if the user types in:
##
##      'Morse Code'
##
##  the program should print
##
##      -- --- и-и иии и       -и-и --- -ии и
##
## -----------------

## =================
##
##  How to implement this?
##  ----------------------
##
##  1.  need a 'master' function (convert?), so that we can do:
##
##  >>> MorseCode.convert("Morse Code")
##  '-- --- и-и иии и       -и-и --- -ии и'
##
##  2.  function like 'convertCharacter' which takes a single character
##      and looks up the morse code string for the character, adds to it
##      the 'LETTER_END' character, and gives it back to the first
##      function.
##
##  3.  so, do something like:
##
##      def convert(string):
##          morse_out = ''
##          for s in string:
##              morse_out += convertCharacter(s)
##          return morse_out
##
## =================

## -----------------
##
## Timings in Morse Code:
##
#          1         2         3         4         5         6         7         8
# 12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
#  
# M------   O----------   R------   S----   E       C----------   O----------   D------   E
# ===.===...===.===.===...=.===.=...=.=.=...=.......===.=.===.=...===.===.===...===.=.=...=
#    ^               ^    ^       ^             ^
#    |              dah  dit      |             |
# symbol space                letter space    word space
#
## ------------------

## ------------------
##
## Morse Code Map:
##
##  A   и-	    |   J   и---    |	S   иии	    |   1   и----   |   Period [.]	        и-и-и-  |   Colon [:]	        ---иии
##  B 	-иии	    |   K   -и-     |	T   -       |   2   ии---   |   Comma [,]	        --ии--  |   Semicolon [;]	-и-и-и
##  C 	-и-и	    |   L   и-ии    |	U   ии-	    |   3   иии--   |   Question mark [?]	ии--ии  |   Double dash [=]	-иии-
##  D 	-ии	    |   M   --	    |   V   иии-    |   4   ииии-   |   Apostrophe [']	        и----и  |   Plus [+]	        и-и-и
##  E 	и	    |   N   -и	    |   W   и--	    |   5   иииии   |   Exclamation mark [!]	-и-и--  |   Hyphen, Minus [-]   -ииии-
##  F 	ии-и	    |   O   ---     |	X   -ии-    |   6   -ииии   |   Slash [/], Fraction bar	-ии-и   |   Underscore [_]      ии--и-
##  G 	--и	    |   P   и--и    |	Y   -и--    |   7   --иии   |   Parenthesis open [(]	-и--и   |   Quotation mark ["]  и-ии-и
##  H 	ииии	    |   Q   --и-    |	Z   --ии    |   8   ---ии   |   Parenthesis closed [)]	-и--и-  |   Dollar sign [$]	иии-ии-
##  I 	ии	    |   R   и-и     |	0   -----   |   9   ----и   |   Ampersand [&], Wait	и-иии   |   At sign [@]	        и--и-и

MORSE_A="и-"	    
MORSE_B="-иии"	    
MORSE_C="-и-и"	    
MORSE_D="-ии"	    
MORSE_E="и"	    
MORSE_F="ии-и"	    
MORSE_G="--и"	    
MORSE_H="ииии"	    
MORSE_I="ии"	    
MORSE_J="и---"
MORSE_K="-и-"
MORSE_L="и-ии"
MORSE_M="--"	
MORSE_N="-и"	
MORSE_O="---" 
MORSE_P="и--и"   
MORSE_Q="--и-"
MORSE_R="и-и" 
MORSE_S="иии"	  
MORSE_T="-"  
MORSE_U="ии-"
MORSE_V="иии-"
MORSE_W="и--"	
MORSE_X="-ии-"
MORSE_Y="-и--"
MORSE_Z="--ии"

MORSE_0="-----"
MORSE_1="и----" 
MORSE_2="ии---"
MORSE_3="иии--" 
MORSE_4="ииии-" 
MORSE_5="иииии" 
MORSE_6="-ииии"
MORSE_7="--иии"
MORSE_8="---ии" 
MORSE_9="----и"

MORSE_PERIOD="и-и-и-"
MORSE_COMMA="--ии--"
MORSE_QUSETION="ии--ии"
MORSE_APOSTROPHE="и----и"
MORSE_EXCLAMATION="-и-и--"
MORSE_SLASH="-ии-и"
MORSE_PAREN_OPEN="-и--и"
MORSE_PAREN_CLOSE="-и--и-"
MORSE_AMPERSAND="и-иии"
MORSE_COLON="---иии"
MORSE_SEMICOLON="-и-и-и"
MORSE_EQUAL="-иии-"
MORSE_PLUS="и-и-и"
MORSE_MINUS="-ииии-"
MORSE_UNDERSCORE="ии--и-"
MORSE_QUOTATION="и-ии-и"
MORSE_DOLLAR="иии-ии-"
MORSE_AT="и--и-и"

MORSE_LETTER_END=" " #1 space after each letter
MORSE_SPACE="       " #6 spaces
# letter end + space = 7 spaces between words

## ------------------

TEXT_TO_MC = {  "a":MORSE_A,    "A":MORSE_A,    "b":MORSE_B,    "B":MORSE_B,    "c":MORSE_C,    "C":MORSE_C,
                "d":MORSE_D,    "D":MORSE_D,    "e":MORSE_E,    "E":MORSE_E,    "f":MORSE_F,    "F":MORSE_F,
                "g":MORSE_G,    "G":MORSE_G,    "h":MORSE_H,    "H":MORSE_H,    "i":MORSE_I,    "I":MORSE_I,
                "j":MORSE_J,    "J":MORSE_J,    "k":MORSE_K,    "K":MORSE_K,    "l":MORSE_L,    "L":MORSE_L,
                "m":MORSE_M,    "M":MORSE_M,    "n":MORSE_N,    "N":MORSE_N,    "o":MORSE_O,    "O":MORSE_O,
                "p":MORSE_P,    "P":MORSE_P,    "q":MORSE_Q,    "Q":MORSE_Q,    "r":MORSE_R,    "R":MORSE_R,
                "s":MORSE_S,    "S":MORSE_S,    "t":MORSE_T,    "T":MORSE_T,    "u":MORSE_U,    "U":MORSE_U,
                "v":MORSE_V,    "v":MORSE_V,    "w":MORSE_W,    "W":MORSE_W,    "x":MORSE_X,    "X":MORSE_X,
                "y":MORSE_Y,    "Y":MORSE_Y,    "z":MORSE_Z,    "Z":MORSE_Z,

                "0":MORSE_0,    "1":MORSE_1,    "2":MORSE_2,    "3":MORSE_3,    "4":MORSE_4,
                "5":MORSE_5,    "6":MORSE_6,    "7":MORSE_7,    "8":MORSE_8,    "9":MORSE_9,

                ".":MORSE_PERIOD,       ",":MORSE_COMMA,        "'":MORSE_APOSTROPHE,
                "?":MORSE_QUSETION,     "!":MORSE_EXCLAMATION,  "/":MORSE_SLASH,
                "(":MORSE_PAREN_OPEN,   ")":MORSE_PAREN_CLOSE,  "&":MORSE_AMPERSAND,
                ":":MORSE_COLON,        ";":MORSE_SEMICOLON,
                "=":MORSE_EQUAL,        "+":MORSE_PLUS,         "-":MORSE_MINUS,
                "_":MORSE_UNDERSCORE,   "\"":MORSE_QUOTATION,   "$":MORSE_DOLLAR,   "@":MORSE_AT,

                0:MORSE_LETTER_END, # every letter should end with this
                " ":MORSE_SPACE,
                -1:None             # if the character in the text cannot be found here, it is mapped to 'None'
                                    # - actually this may be redundant
                }


def convertCharacter(char_str):
    morse_equiv = ''
    try:
        morse_equiv += TEXT_TO_MC[char_str]
    except KeyError:
        morse_equiv += char_str
    morse_equiv += TEXT_TO_MC[0]
    return morse_equiv

def convert(text_str):
    morse_out = ''
    for character in text_str:
        morse_out += convertCharacter(character)
    return morse_out




